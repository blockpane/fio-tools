// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/blockpane/fio-tools/fio-fee-reporter/models"
)

// GetFeeVotesProducerOKCode is the HTTP code returned for type GetFeeVotesProducerOK
const GetFeeVotesProducerOKCode int = 200

/*GetFeeVotesProducerOK An array of prices for each action in FIO based on the producer's votes

swagger:response getFeeVotesProducerOK
*/
type GetFeeVotesProducerOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Price `json:"body,omitempty"`
}

// NewGetFeeVotesProducerOK creates GetFeeVotesProducerOK with default headers values
func NewGetFeeVotesProducerOK() *GetFeeVotesProducerOK {

	return &GetFeeVotesProducerOK{}
}

// WithPayload adds the payload to the get fee votes producer o k response
func (o *GetFeeVotesProducerOK) WithPayload(payload []*models.Price) *GetFeeVotesProducerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes producer o k response
func (o *GetFeeVotesProducerOK) SetPayload(payload []*models.Price) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesProducerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Price, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFeeVotesProducerBadRequestCode is the HTTP code returned for type GetFeeVotesProducerBadRequest
const GetFeeVotesProducerBadRequestCode int = 400

/*GetFeeVotesProducerBadRequest Invalid account format, should be a 12 character string

swagger:response getFeeVotesProducerBadRequest
*/
type GetFeeVotesProducerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesProducerBadRequest creates GetFeeVotesProducerBadRequest with default headers values
func NewGetFeeVotesProducerBadRequest() *GetFeeVotesProducerBadRequest {

	return &GetFeeVotesProducerBadRequest{}
}

// WithPayload adds the payload to the get fee votes producer bad request response
func (o *GetFeeVotesProducerBadRequest) WithPayload(payload *models.Error) *GetFeeVotesProducerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes producer bad request response
func (o *GetFeeVotesProducerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesProducerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeeVotesProducerNotFoundCode is the HTTP code returned for type GetFeeVotesProducerNotFound
const GetFeeVotesProducerNotFoundCode int = 404

/*GetFeeVotesProducerNotFound Did not find a matching producer

swagger:response getFeeVotesProducerNotFound
*/
type GetFeeVotesProducerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesProducerNotFound creates GetFeeVotesProducerNotFound with default headers values
func NewGetFeeVotesProducerNotFound() *GetFeeVotesProducerNotFound {

	return &GetFeeVotesProducerNotFound{}
}

// WithPayload adds the payload to the get fee votes producer not found response
func (o *GetFeeVotesProducerNotFound) WithPayload(payload *models.Error) *GetFeeVotesProducerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes producer not found response
func (o *GetFeeVotesProducerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesProducerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeeVotesProducerServiceUnavailableCode is the HTTP code returned for type GetFeeVotesProducerServiceUnavailable
const GetFeeVotesProducerServiceUnavailableCode int = 503

/*GetFeeVotesProducerServiceUnavailable Data is stale, has not been updated for several minutes

swagger:response getFeeVotesProducerServiceUnavailable
*/
type GetFeeVotesProducerServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesProducerServiceUnavailable creates GetFeeVotesProducerServiceUnavailable with default headers values
func NewGetFeeVotesProducerServiceUnavailable() *GetFeeVotesProducerServiceUnavailable {

	return &GetFeeVotesProducerServiceUnavailable{}
}

// WithPayload adds the payload to the get fee votes producer service unavailable response
func (o *GetFeeVotesProducerServiceUnavailable) WithPayload(payload *models.Error) *GetFeeVotesProducerServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes producer service unavailable response
func (o *GetFeeVotesProducerServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesProducerServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
