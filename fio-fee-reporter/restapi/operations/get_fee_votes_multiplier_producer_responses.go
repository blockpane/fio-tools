// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/blockpane/fio-tools/fio-fee-reporter/models"
)

// GetFeeVotesMultiplierProducerOKCode is the HTTP code returned for type GetFeeVotesMultiplierProducerOK
const GetFeeVotesMultiplierProducerOKCode int = 200

/*GetFeeVotesMultiplierProducerOK The currently used fee multiplier which is applied to the fee vote to determine price

swagger:response getFeeVotesMultiplierProducerOK
*/
type GetFeeVotesMultiplierProducerOK struct {

	/*
	  In: Body
	*/
	Payload *GetFeeVotesMultiplierProducerOKBody `json:"body,omitempty"`
}

// NewGetFeeVotesMultiplierProducerOK creates GetFeeVotesMultiplierProducerOK with default headers values
func NewGetFeeVotesMultiplierProducerOK() *GetFeeVotesMultiplierProducerOK {

	return &GetFeeVotesMultiplierProducerOK{}
}

// WithPayload adds the payload to the get fee votes multiplier producer o k response
func (o *GetFeeVotesMultiplierProducerOK) WithPayload(payload *GetFeeVotesMultiplierProducerOKBody) *GetFeeVotesMultiplierProducerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes multiplier producer o k response
func (o *GetFeeVotesMultiplierProducerOK) SetPayload(payload *GetFeeVotesMultiplierProducerOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesMultiplierProducerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeeVotesMultiplierProducerBadRequestCode is the HTTP code returned for type GetFeeVotesMultiplierProducerBadRequest
const GetFeeVotesMultiplierProducerBadRequestCode int = 400

/*GetFeeVotesMultiplierProducerBadRequest Invalid account format, should be a 12 character string

swagger:response getFeeVotesMultiplierProducerBadRequest
*/
type GetFeeVotesMultiplierProducerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesMultiplierProducerBadRequest creates GetFeeVotesMultiplierProducerBadRequest with default headers values
func NewGetFeeVotesMultiplierProducerBadRequest() *GetFeeVotesMultiplierProducerBadRequest {

	return &GetFeeVotesMultiplierProducerBadRequest{}
}

// WithPayload adds the payload to the get fee votes multiplier producer bad request response
func (o *GetFeeVotesMultiplierProducerBadRequest) WithPayload(payload *models.Error) *GetFeeVotesMultiplierProducerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes multiplier producer bad request response
func (o *GetFeeVotesMultiplierProducerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesMultiplierProducerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeeVotesMultiplierProducerNotFoundCode is the HTTP code returned for type GetFeeVotesMultiplierProducerNotFound
const GetFeeVotesMultiplierProducerNotFoundCode int = 404

/*GetFeeVotesMultiplierProducerNotFound Did not find a matching producer

swagger:response getFeeVotesMultiplierProducerNotFound
*/
type GetFeeVotesMultiplierProducerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesMultiplierProducerNotFound creates GetFeeVotesMultiplierProducerNotFound with default headers values
func NewGetFeeVotesMultiplierProducerNotFound() *GetFeeVotesMultiplierProducerNotFound {

	return &GetFeeVotesMultiplierProducerNotFound{}
}

// WithPayload adds the payload to the get fee votes multiplier producer not found response
func (o *GetFeeVotesMultiplierProducerNotFound) WithPayload(payload *models.Error) *GetFeeVotesMultiplierProducerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes multiplier producer not found response
func (o *GetFeeVotesMultiplierProducerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesMultiplierProducerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFeeVotesMultiplierProducerServiceUnavailableCode is the HTTP code returned for type GetFeeVotesMultiplierProducerServiceUnavailable
const GetFeeVotesMultiplierProducerServiceUnavailableCode int = 503

/*GetFeeVotesMultiplierProducerServiceUnavailable Data is stale, has not been updated for several minutes

swagger:response getFeeVotesMultiplierProducerServiceUnavailable
*/
type GetFeeVotesMultiplierProducerServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFeeVotesMultiplierProducerServiceUnavailable creates GetFeeVotesMultiplierProducerServiceUnavailable with default headers values
func NewGetFeeVotesMultiplierProducerServiceUnavailable() *GetFeeVotesMultiplierProducerServiceUnavailable {

	return &GetFeeVotesMultiplierProducerServiceUnavailable{}
}

// WithPayload adds the payload to the get fee votes multiplier producer service unavailable response
func (o *GetFeeVotesMultiplierProducerServiceUnavailable) WithPayload(payload *models.Error) *GetFeeVotesMultiplierProducerServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get fee votes multiplier producer service unavailable response
func (o *GetFeeVotesMultiplierProducerServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFeeVotesMultiplierProducerServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
